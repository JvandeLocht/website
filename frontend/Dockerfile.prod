# Production Dockerfile for React app - builds static files
FROM node:20-alpine AS builder

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S reactuser -u 1001

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY --chown=reactuser:nodejs . .

USER reactuser

# Build the React app for production
RUN npm run build

# Production stage - serve static files with nginx
FROM nginx:alpine

# Create non-root user for nginx
RUN addgroup -g 1001 -S nginx && \
    adduser -S nginxuser -u 1001

# Copy the built React app from builder stage
COPY --from=builder /app/build /usr/share/nginx/html/calc

# Copy custom nginx configuration for React SPA
COPY nginx.prod.conf /etc/nginx/conf.d/default.conf

# Set proper permissions
RUN chown -R nginxuser:nginx /usr/share/nginx/html && \
    chown -R nginxuser:nginx /var/cache/nginx && \
    chown -R nginxuser:nginx /var/log/nginx && \
    chown -R nginxuser:nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nginxuser:nginx /var/run/nginx.pid

USER nginxuser

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]